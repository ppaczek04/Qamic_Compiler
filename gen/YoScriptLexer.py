# Generated from C:/Studia/Kompilatory_projekt/YoScript.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,243,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,1,0,3,0,75,8,0,1,0,1,0,1,0,5,0,
        80,8,0,10,0,12,0,83,9,0,3,0,85,8,0,1,0,1,0,4,0,89,8,0,11,0,12,0,
        90,3,0,93,8,0,1,1,1,1,1,1,1,1,5,1,99,8,1,10,1,12,1,102,9,1,1,1,1,
        1,1,1,1,1,1,1,5,1,109,8,1,10,1,12,1,112,9,1,1,1,3,1,115,8,1,1,2,
        1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,
        1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,17,1,17,
        1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,
        1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,28,1,29,
        1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,
        1,32,1,32,5,32,218,8,32,10,32,12,32,221,9,32,1,33,3,33,224,8,33,
        1,33,1,33,1,34,4,34,229,8,34,11,34,12,34,230,1,34,1,34,1,35,1,35,
        5,35,237,8,35,10,35,12,35,240,9,35,1,35,1,35,0,0,36,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
        53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,1,0,
        8,1,0,49,57,1,0,48,57,2,0,34,34,92,92,2,0,39,39,92,92,3,0,65,90,
        95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,9,9,32,32,2,0,10,10,
        13,13,256,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,1,74,1,0,0,0,3,114,1,0,0,0,5,116,1,0,0,0,7,120,
        1,0,0,0,9,125,1,0,0,0,11,133,1,0,0,0,13,137,1,0,0,0,15,140,1,0,0,
        0,17,144,1,0,0,0,19,148,1,0,0,0,21,153,1,0,0,0,23,160,1,0,0,0,25,
        163,1,0,0,0,27,165,1,0,0,0,29,167,1,0,0,0,31,169,1,0,0,0,33,171,
        1,0,0,0,35,174,1,0,0,0,37,177,1,0,0,0,39,179,1,0,0,0,41,181,1,0,
        0,0,43,183,1,0,0,0,45,185,1,0,0,0,47,187,1,0,0,0,49,189,1,0,0,0,
        51,191,1,0,0,0,53,193,1,0,0,0,55,195,1,0,0,0,57,197,1,0,0,0,59,201,
        1,0,0,0,61,205,1,0,0,0,63,210,1,0,0,0,65,215,1,0,0,0,67,223,1,0,
        0,0,69,228,1,0,0,0,71,234,1,0,0,0,73,75,5,45,0,0,74,73,1,0,0,0,74,
        75,1,0,0,0,75,84,1,0,0,0,76,85,5,48,0,0,77,81,7,0,0,0,78,80,7,1,
        0,0,79,78,1,0,0,0,80,83,1,0,0,0,81,79,1,0,0,0,81,82,1,0,0,0,82,85,
        1,0,0,0,83,81,1,0,0,0,84,76,1,0,0,0,84,77,1,0,0,0,85,92,1,0,0,0,
        86,88,5,46,0,0,87,89,7,1,0,0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,1,
        0,0,0,90,91,1,0,0,0,91,93,1,0,0,0,92,86,1,0,0,0,92,93,1,0,0,0,93,
        2,1,0,0,0,94,100,5,34,0,0,95,96,5,92,0,0,96,99,9,0,0,0,97,99,8,2,
        0,0,98,95,1,0,0,0,98,97,1,0,0,0,99,102,1,0,0,0,100,98,1,0,0,0,100,
        101,1,0,0,0,101,103,1,0,0,0,102,100,1,0,0,0,103,115,5,34,0,0,104,
        110,5,39,0,0,105,106,5,92,0,0,106,109,9,0,0,0,107,109,8,3,0,0,108,
        105,1,0,0,0,108,107,1,0,0,0,109,112,1,0,0,0,110,108,1,0,0,0,110,
        111,1,0,0,0,111,113,1,0,0,0,112,110,1,0,0,0,113,115,5,39,0,0,114,
        94,1,0,0,0,114,104,1,0,0,0,115,4,1,0,0,0,116,117,5,121,0,0,117,118,
        5,101,0,0,118,119,5,112,0,0,119,6,1,0,0,0,120,121,5,110,0,0,121,
        122,5,111,0,0,122,123,5,112,0,0,123,124,5,101,0,0,124,8,1,0,0,0,
        125,126,5,102,0,0,126,127,5,111,0,0,127,128,5,114,0,0,128,129,5,
        114,0,0,129,130,5,101,0,0,130,131,5,97,0,0,131,132,5,108,0,0,132,
        10,1,0,0,0,133,134,5,102,0,0,134,135,5,111,0,0,135,136,5,114,0,0,
        136,12,1,0,0,0,137,138,5,105,0,0,138,139,5,102,0,0,139,14,1,0,0,
        0,140,141,5,116,0,0,141,142,5,104,0,0,142,143,5,111,0,0,143,16,1,
        0,0,0,144,145,5,105,0,0,145,146,5,100,0,0,146,147,5,107,0,0,147,
        18,1,0,0,0,148,149,5,110,0,0,149,150,5,97,0,0,150,151,5,104,0,0,
        151,152,5,104,0,0,152,20,1,0,0,0,153,154,5,103,0,0,154,155,5,111,
        0,0,155,156,5,98,0,0,156,157,5,97,0,0,157,158,5,99,0,0,158,159,5,
        107,0,0,159,22,1,0,0,0,160,161,5,105,0,0,161,162,5,110,0,0,162,24,
        1,0,0,0,163,164,5,43,0,0,164,26,1,0,0,0,165,166,5,45,0,0,166,28,
        1,0,0,0,167,168,5,42,0,0,168,30,1,0,0,0,169,170,5,47,0,0,170,32,
        1,0,0,0,171,172,5,61,0,0,172,173,5,61,0,0,173,34,1,0,0,0,174,175,
        5,33,0,0,175,176,5,61,0,0,176,36,1,0,0,0,177,178,5,61,0,0,178,38,
        1,0,0,0,179,180,5,40,0,0,180,40,1,0,0,0,181,182,5,41,0,0,182,42,
        1,0,0,0,183,184,5,123,0,0,184,44,1,0,0,0,185,186,5,125,0,0,186,46,
        1,0,0,0,187,188,5,91,0,0,188,48,1,0,0,0,189,190,5,93,0,0,190,50,
        1,0,0,0,191,192,5,44,0,0,192,52,1,0,0,0,193,194,5,58,0,0,194,54,
        1,0,0,0,195,196,5,46,0,0,196,56,1,0,0,0,197,198,5,105,0,0,198,199,
        5,110,0,0,199,200,5,116,0,0,200,58,1,0,0,0,201,202,5,115,0,0,202,
        203,5,116,0,0,203,204,5,114,0,0,204,60,1,0,0,0,205,206,5,98,0,0,
        206,207,5,111,0,0,207,208,5,111,0,0,208,209,5,108,0,0,209,62,1,0,
        0,0,210,211,5,110,0,0,211,212,5,111,0,0,212,213,5,110,0,0,213,214,
        5,101,0,0,214,64,1,0,0,0,215,219,7,4,0,0,216,218,7,5,0,0,217,216,
        1,0,0,0,218,221,1,0,0,0,219,217,1,0,0,0,219,220,1,0,0,0,220,66,1,
        0,0,0,221,219,1,0,0,0,222,224,5,13,0,0,223,222,1,0,0,0,223,224,1,
        0,0,0,224,225,1,0,0,0,225,226,5,10,0,0,226,68,1,0,0,0,227,229,7,
        6,0,0,228,227,1,0,0,0,229,230,1,0,0,0,230,228,1,0,0,0,230,231,1,
        0,0,0,231,232,1,0,0,0,232,233,6,34,0,0,233,70,1,0,0,0,234,238,5,
        35,0,0,235,237,8,7,0,0,236,235,1,0,0,0,237,240,1,0,0,0,238,236,1,
        0,0,0,238,239,1,0,0,0,239,241,1,0,0,0,240,238,1,0,0,0,241,242,6,
        35,0,0,242,72,1,0,0,0,15,0,74,81,84,90,92,98,100,108,110,114,219,
        223,230,238,1,6,0,0
    ]

class YoScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUMBER = 1
    STRING = 2
    TRUE = 3
    FALSE = 4
    FORREAL = 5
    FOR = 6
    IF = 7
    THO = 8
    IDK = 9
    NAHH = 10
    GOBACK = 11
    IN = 12
    PLUS = 13
    MINUS = 14
    STAR = 15
    SLASH = 16
    EQEQUAL = 17
    NOTEQUAL = 18
    EQUAL = 19
    OPEN_PAREN = 20
    CLOSE_PAREN = 21
    OPEN_BRACE = 22
    CLOSE_BRACE = 23
    OPEN_BRACKET = 24
    CLOSE_BRACKET = 25
    COMMA = 26
    COLON = 27
    DOT = 28
    INT = 29
    STR = 30
    BOOLEAN = 31
    NONE = 32
    IDENTIFIER = 33
    NEWLINE = 34
    WS = 35
    COMMENT = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'yep'", "'nope'", "'forreal'", "'for'", "'if'", "'tho'", "'idk'", 
            "'nahh'", "'goback'", "'in'", "'+'", "'-'", "'*'", "'/'", "'=='", 
            "'!='", "'='", "'('", "')'", "'{'", "'}'", "'['", "']'", "','", 
            "':'", "'.'", "'int'", "'str'", "'bool'", "'none'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "STRING", "TRUE", "FALSE", "FORREAL", "FOR", "IF", 
            "THO", "IDK", "NAHH", "GOBACK", "IN", "PLUS", "MINUS", "STAR", 
            "SLASH", "EQEQUAL", "NOTEQUAL", "EQUAL", "OPEN_PAREN", "CLOSE_PAREN", 
            "OPEN_BRACE", "CLOSE_BRACE", "OPEN_BRACKET", "CLOSE_BRACKET", 
            "COMMA", "COLON", "DOT", "INT", "STR", "BOOLEAN", "NONE", "IDENTIFIER", 
            "NEWLINE", "WS", "COMMENT" ]

    ruleNames = [ "NUMBER", "STRING", "TRUE", "FALSE", "FORREAL", "FOR", 
                  "IF", "THO", "IDK", "NAHH", "GOBACK", "IN", "PLUS", "MINUS", 
                  "STAR", "SLASH", "EQEQUAL", "NOTEQUAL", "EQUAL", "OPEN_PAREN", 
                  "CLOSE_PAREN", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_BRACKET", 
                  "CLOSE_BRACKET", "COMMA", "COLON", "DOT", "INT", "STR", 
                  "BOOLEAN", "NONE", "IDENTIFIER", "NEWLINE", "WS", "COMMENT" ]

    grammarFileName = "YoScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


