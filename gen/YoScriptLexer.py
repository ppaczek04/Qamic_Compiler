# Generated from YoScript.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,33,224,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,1,0,3,0,69,8,0,1,0,1,0,1,0,5,0,74,8,0,10,0,12,0,77,9,0,3,0,79,
        8,0,1,0,1,0,4,0,83,8,0,11,0,12,0,84,3,0,87,8,0,1,1,1,1,1,1,1,1,5,
        1,93,8,1,10,1,12,1,96,9,1,1,1,1,1,1,1,1,1,1,1,5,1,103,8,1,10,1,12,
        1,106,9,1,1,1,3,1,109,8,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,
        3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,
        7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,
        12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,
        17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,
        24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,
        27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,5,29,199,8,29,10,29,12,
        29,202,9,29,1,30,3,30,205,8,30,1,30,1,30,1,31,4,31,210,8,31,11,31,
        12,31,211,1,31,1,31,1,32,1,32,5,32,218,8,32,10,32,12,32,221,9,32,
        1,32,1,32,0,0,33,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
        33,1,0,8,1,0,49,57,1,0,48,57,2,0,34,34,92,92,2,0,39,39,92,92,3,0,
        65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,9,9,32,32,2,
        0,10,10,13,13,237,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,1,68,1,0,0,
        0,3,108,1,0,0,0,5,110,1,0,0,0,7,118,1,0,0,0,9,122,1,0,0,0,11,125,
        1,0,0,0,13,129,1,0,0,0,15,134,1,0,0,0,17,141,1,0,0,0,19,144,1,0,
        0,0,21,146,1,0,0,0,23,148,1,0,0,0,25,150,1,0,0,0,27,152,1,0,0,0,
        29,155,1,0,0,0,31,158,1,0,0,0,33,160,1,0,0,0,35,162,1,0,0,0,37,164,
        1,0,0,0,39,166,1,0,0,0,41,168,1,0,0,0,43,170,1,0,0,0,45,172,1,0,
        0,0,47,174,1,0,0,0,49,176,1,0,0,0,51,178,1,0,0,0,53,182,1,0,0,0,
        55,186,1,0,0,0,57,191,1,0,0,0,59,196,1,0,0,0,61,204,1,0,0,0,63,209,
        1,0,0,0,65,215,1,0,0,0,67,69,5,45,0,0,68,67,1,0,0,0,68,69,1,0,0,
        0,69,78,1,0,0,0,70,79,5,48,0,0,71,75,7,0,0,0,72,74,7,1,0,0,73,72,
        1,0,0,0,74,77,1,0,0,0,75,73,1,0,0,0,75,76,1,0,0,0,76,79,1,0,0,0,
        77,75,1,0,0,0,78,70,1,0,0,0,78,71,1,0,0,0,79,86,1,0,0,0,80,82,5,
        46,0,0,81,83,7,1,0,0,82,81,1,0,0,0,83,84,1,0,0,0,84,82,1,0,0,0,84,
        85,1,0,0,0,85,87,1,0,0,0,86,80,1,0,0,0,86,87,1,0,0,0,87,2,1,0,0,
        0,88,94,5,34,0,0,89,90,5,92,0,0,90,93,9,0,0,0,91,93,8,2,0,0,92,89,
        1,0,0,0,92,91,1,0,0,0,93,96,1,0,0,0,94,92,1,0,0,0,94,95,1,0,0,0,
        95,97,1,0,0,0,96,94,1,0,0,0,97,109,5,34,0,0,98,104,5,39,0,0,99,100,
        5,92,0,0,100,103,9,0,0,0,101,103,8,3,0,0,102,99,1,0,0,0,102,101,
        1,0,0,0,103,106,1,0,0,0,104,102,1,0,0,0,104,105,1,0,0,0,105,107,
        1,0,0,0,106,104,1,0,0,0,107,109,5,39,0,0,108,88,1,0,0,0,108,98,1,
        0,0,0,109,4,1,0,0,0,110,111,5,102,0,0,111,112,5,111,0,0,112,113,
        5,114,0,0,113,114,5,114,0,0,114,115,5,101,0,0,115,116,5,97,0,0,116,
        117,5,108,0,0,117,6,1,0,0,0,118,119,5,102,0,0,119,120,5,111,0,0,
        120,121,5,114,0,0,121,8,1,0,0,0,122,123,5,105,0,0,123,124,5,102,
        0,0,124,10,1,0,0,0,125,126,5,105,0,0,126,127,5,100,0,0,127,128,5,
        107,0,0,128,12,1,0,0,0,129,130,5,110,0,0,130,131,5,97,0,0,131,132,
        5,104,0,0,132,133,5,104,0,0,133,14,1,0,0,0,134,135,5,103,0,0,135,
        136,5,111,0,0,136,137,5,98,0,0,137,138,5,97,0,0,138,139,5,99,0,0,
        139,140,5,107,0,0,140,16,1,0,0,0,141,142,5,105,0,0,142,143,5,110,
        0,0,143,18,1,0,0,0,144,145,5,43,0,0,145,20,1,0,0,0,146,147,5,45,
        0,0,147,22,1,0,0,0,148,149,5,42,0,0,149,24,1,0,0,0,150,151,5,47,
        0,0,151,26,1,0,0,0,152,153,5,61,0,0,153,154,5,61,0,0,154,28,1,0,
        0,0,155,156,5,33,0,0,156,157,5,61,0,0,157,30,1,0,0,0,158,159,5,61,
        0,0,159,32,1,0,0,0,160,161,5,40,0,0,161,34,1,0,0,0,162,163,5,41,
        0,0,163,36,1,0,0,0,164,165,5,123,0,0,165,38,1,0,0,0,166,167,5,125,
        0,0,167,40,1,0,0,0,168,169,5,91,0,0,169,42,1,0,0,0,170,171,5,93,
        0,0,171,44,1,0,0,0,172,173,5,44,0,0,173,46,1,0,0,0,174,175,5,58,
        0,0,175,48,1,0,0,0,176,177,5,46,0,0,177,50,1,0,0,0,178,179,5,105,
        0,0,179,180,5,110,0,0,180,181,5,116,0,0,181,52,1,0,0,0,182,183,5,
        115,0,0,183,184,5,116,0,0,184,185,5,114,0,0,185,54,1,0,0,0,186,187,
        5,98,0,0,187,188,5,111,0,0,188,189,5,111,0,0,189,190,5,108,0,0,190,
        56,1,0,0,0,191,192,5,110,0,0,192,193,5,111,0,0,193,194,5,110,0,0,
        194,195,5,101,0,0,195,58,1,0,0,0,196,200,7,4,0,0,197,199,7,5,0,0,
        198,197,1,0,0,0,199,202,1,0,0,0,200,198,1,0,0,0,200,201,1,0,0,0,
        201,60,1,0,0,0,202,200,1,0,0,0,203,205,5,13,0,0,204,203,1,0,0,0,
        204,205,1,0,0,0,205,206,1,0,0,0,206,207,5,10,0,0,207,62,1,0,0,0,
        208,210,7,6,0,0,209,208,1,0,0,0,210,211,1,0,0,0,211,209,1,0,0,0,
        211,212,1,0,0,0,212,213,1,0,0,0,213,214,6,31,0,0,214,64,1,0,0,0,
        215,219,5,35,0,0,216,218,8,7,0,0,217,216,1,0,0,0,218,221,1,0,0,0,
        219,217,1,0,0,0,219,220,1,0,0,0,220,222,1,0,0,0,221,219,1,0,0,0,
        222,223,6,32,0,0,223,66,1,0,0,0,15,0,68,75,78,84,86,92,94,102,104,
        108,200,204,211,219,1,6,0,0
    ]

class YoScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUMBER = 1
    STRING = 2
    FORREAL = 3
    FOR = 4
    IF = 5
    IDK = 6
    NAHH = 7
    GOBACK = 8
    IN = 9
    PLUS = 10
    MINUS = 11
    STAR = 12
    SLASH = 13
    EQEQUAL = 14
    NOTEQUAL = 15
    EQUAL = 16
    OPEN_PAREN = 17
    CLOSE_PAREN = 18
    OPEN_BRACE = 19
    CLOSE_BRACE = 20
    OPEN_BRACKET = 21
    CLOSE_BRACKET = 22
    COMMA = 23
    COLON = 24
    DOT = 25
    INT = 26
    STR = 27
    BOOLEAN = 28
    NONE = 29
    IDENTIFIER = 30
    NEWLINE = 31
    WS = 32
    COMMENT = 33

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'forreal'", "'for'", "'if'", "'idk'", "'nahh'", "'goback'", 
            "'in'", "'+'", "'-'", "'*'", "'/'", "'=='", "'!='", "'='", "'('", 
            "')'", "'{'", "'}'", "'['", "']'", "','", "':'", "'.'", "'int'", 
            "'str'", "'bool'", "'none'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "STRING", "FORREAL", "FOR", "IF", "IDK", "NAHH", "GOBACK", 
            "IN", "PLUS", "MINUS", "STAR", "SLASH", "EQEQUAL", "NOTEQUAL", 
            "EQUAL", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", "CLOSE_BRACE", 
            "OPEN_BRACKET", "CLOSE_BRACKET", "COMMA", "COLON", "DOT", "INT", 
            "STR", "BOOLEAN", "NONE", "IDENTIFIER", "NEWLINE", "WS", "COMMENT" ]

    ruleNames = [ "NUMBER", "STRING", "FORREAL", "FOR", "IF", "IDK", "NAHH", 
                  "GOBACK", "IN", "PLUS", "MINUS", "STAR", "SLASH", "EQEQUAL", 
                  "NOTEQUAL", "EQUAL", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", 
                  "CLOSE_BRACE", "OPEN_BRACKET", "CLOSE_BRACKET", "COMMA", 
                  "COLON", "DOT", "INT", "STR", "BOOLEAN", "NONE", "IDENTIFIER", 
                  "NEWLINE", "WS", "COMMENT" ]

    grammarFileName = "YoScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


